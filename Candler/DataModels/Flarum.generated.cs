//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : flarum
	/// Data Source    : 127.0.0.1
	/// Server Version : 5.5.60-0+deb8u1
	/// </summary>
	public partial class FlarumDB : LinqToDB.Data.DataConnection
	{
		public ITable<AccessToken>     AccessTokens     { get { return this.GetTable<AccessToken>(); } }
		public ITable<ApiKey>          ApiKeys          { get { return this.GetTable<ApiKey>(); } }
		public ITable<AuthToken>       AuthTokens       { get { return this.GetTable<AuthToken>(); } }
		public ITable<Discussion>      Discussions      { get { return this.GetTable<Discussion>(); } }
		public ITable<DiscussionsTag>  DiscussionsTags  { get { return this.GetTable<DiscussionsTag>(); } }
		public ITable<EmailToken>      EmailTokens      { get { return this.GetTable<EmailToken>(); } }
		public ITable<Flag>            Flags            { get { return this.GetTable<Flag>(); } }
		public ITable<Group>           Groups           { get { return this.GetTable<Group>(); } }
		public ITable<MentionsPost>    MentionsPosts    { get { return this.GetTable<MentionsPost>(); } }
		public ITable<MentionsUser>    MentionsUsers    { get { return this.GetTable<MentionsUser>(); } }
		public ITable<Migration>       Migrations       { get { return this.GetTable<Migration>(); } }
		public ITable<Notification>    Notifications    { get { return this.GetTable<Notification>(); } }
		public ITable<PasswordToken>   PasswordTokens   { get { return this.GetTable<PasswordToken>(); } }
		public ITable<Permission>      Permissions      { get { return this.GetTable<Permission>(); } }
		public ITable<Post>            Posts            { get { return this.GetTable<Post>(); } }
		public ITable<PostsLike>       PostsLikes       { get { return this.GetTable<PostsLike>(); } }
		public ITable<Setting>         Settings         { get { return this.GetTable<Setting>(); } }
		public ITable<Tag>             Tags             { get { return this.GetTable<Tag>(); } }
		public ITable<User>            Users            { get { return this.GetTable<User>(); } }
		public ITable<UsersDiscussion> UsersDiscussions { get { return this.GetTable<UsersDiscussion>(); } }
		public ITable<UsersGroup>      UsersGroups      { get { return this.GetTable<UsersGroup>(); } }
		public ITable<UsersTag>        UsersTags        { get { return this.GetTable<UsersTag>(); } }

		public void InitMappingSchema()
		{
		}

		public FlarumDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FlarumDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext();
	}

	[Table("access_tokens")]
	public partial class AccessToken
	{
		[Column("id"),            PrimaryKey, NotNull] public string Id           { get; set; } // varchar(40)
		[Column("user_id"),                   NotNull] public uint   UserId       { get; set; } // int(10) unsigned
		[Column("last_activity"),             NotNull] public int    LastActivity { get; set; } // int(11)
		[Column("lifetime"),                  NotNull] public int    Lifetime     { get; set; } // int(11)
	}

	[Table("api_keys")]
	public partial class ApiKey
	{
		[Column("id"), PrimaryKey, NotNull] public string Id { get; set; } // varchar(100)
	}

	[Table("auth_tokens")]
	public partial class AuthToken
	{
		[Column("id"),         PrimaryKey, NotNull] public string   Id        { get; set; } // varchar(100)
		[Column("payload"),                NotNull] public string   Payload   { get; set; } // varchar(150)
		[Column("created_at"),             NotNull] public DateTime CreatedAt { get; set; } // timestamp
	}

	[Table("discussions")]
	public partial class Discussion
	{
		[Column("id"),                 PrimaryKey,  Identity] public uint      Id                { get; set; } // int(10) unsigned
		[Column("title"),              NotNull              ] public string    Title             { get; set; } // varchar(200)
		[Column("comments_count"),     NotNull              ] public uint      CommentsCount     { get; set; } // int(10) unsigned
		[Column("participants_count"), NotNull              ] public uint      ParticipantsCount { get; set; } // int(10) unsigned
		[Column("number_index"),       NotNull              ] public uint      NumberIndex       { get; set; } // int(10) unsigned
		[Column("start_time"),         NotNull              ] public DateTime  StartTime         { get; set; } // datetime
		[Column("start_user_id"),         Nullable          ] public uint?     StartUserId       { get; set; } // int(10) unsigned
		[Column("start_post_id"),         Nullable          ] public uint?     StartPostId       { get; set; } // int(10) unsigned
		[Column("last_time"),             Nullable          ] public DateTime? LastTime          { get; set; } // datetime
		[Column("last_user_id"),          Nullable          ] public uint?     LastUserId        { get; set; } // int(10) unsigned
		[Column("last_post_id"),          Nullable          ] public uint?     LastPostId        { get; set; } // int(10) unsigned
		[Column("last_post_number"),      Nullable          ] public uint?     LastPostNumber    { get; set; } // int(10) unsigned
		[Column("hide_time"),             Nullable          ] public DateTime? HideTime          { get; set; } // datetime
		[Column("hide_user_id"),          Nullable          ] public uint?     HideUserId        { get; set; } // int(10) unsigned
		[Column("slug"),               NotNull              ] public string    Slug              { get; set; } // varchar(255)
		[Column("is_approved"),        NotNull              ] public bool      IsApproved        { get; set; } // tinyint(1)
		[Column("is_locked"),          NotNull              ] public bool      IsLocked          { get; set; } // tinyint(1)
		[Column("is_sticky"),          NotNull              ] public bool      IsSticky          { get; set; } // tinyint(1)
		[Column("is_private"),         NotNull              ] public bool      IsPrivate         { get; set; } // tinyint(1)
	}

	[Table("discussions_tags")]
	public partial class DiscussionsTag
	{
		[Column("discussion_id"), PrimaryKey(1), NotNull] public uint DiscussionId { get; set; } // int(10) unsigned
		[Column("tag_id"),        PrimaryKey(2), NotNull] public uint TagId        { get; set; } // int(10) unsigned
	}

	[Table("email_tokens")]
	public partial class EmailToken
	{
		[Column("id"),         PrimaryKey, NotNull] public string   Id        { get; set; } // varchar(100)
		[Column("email"),                  NotNull] public string   Email     { get; set; } // varchar(150)
		[Column("user_id"),                NotNull] public uint     UserId    { get; set; } // int(10) unsigned
		[Column("created_at"),             NotNull] public DateTime CreatedAt { get; set; } // timestamp
	}

	[Table("flags")]
	public partial class Flag
	{
		[Column("id"),            PrimaryKey,  Identity] public uint     Id           { get; set; } // int(10) unsigned
		[Column("post_id"),       NotNull              ] public uint     PostId       { get; set; } // int(10) unsigned
		[Column("type"),          NotNull              ] public string   Type         { get; set; } // varchar(255)
		[Column("user_id"),          Nullable          ] public uint?    UserId       { get; set; } // int(10) unsigned
		[Column("reason"),           Nullable          ] public string   Reason       { get; set; } // varchar(255)
		[Column("reason_detail"),    Nullable          ] public string   ReasonDetail { get; set; } // varchar(255)
		[Column("time"),          NotNull              ] public DateTime Time         { get; set; } // datetime
	}

	[Table("groups")]
	public partial class Group
	{
		[Column("id"),            PrimaryKey,  Identity] public uint   Id           { get; set; } // int(10) unsigned
		[Column("name_singular"), NotNull              ] public string NameSingular { get; set; } // varchar(100)
		[Column("name_plural"),   NotNull              ] public string NamePlural   { get; set; } // varchar(100)
		[Column("color"),            Nullable          ] public string Color        { get; set; } // varchar(20)
		[Column("icon"),             Nullable          ] public string Icon         { get; set; } // varchar(100)
	}

	[Table("mentions_posts")]
	public partial class MentionsPost
	{
		[Column("post_id"),     PrimaryKey(1), NotNull] public uint PostId     { get; set; } // int(10) unsigned
		[Column("mentions_id"), PrimaryKey(2), NotNull] public uint MentionsId { get; set; } // int(10) unsigned
	}

	[Table("mentions_users")]
	public partial class MentionsUser
	{
		[Column("post_id"),     PrimaryKey(1), NotNull] public uint PostId     { get; set; } // int(10) unsigned
		[Column("mentions_id"), PrimaryKey(2), NotNull] public uint MentionsId { get; set; } // int(10) unsigned
	}

	[Table("migrations")]
	public partial class Migration
	{
		[Column("migration"), NotNull    ] public string Migration_Column { get; set; } // varchar(255)
		[Column("extension"),    Nullable] public string Extension        { get; set; } // varchar(255)
	}

	[Table("notifications")]
	public partial class Notification
	{
		[Column("id"),           PrimaryKey,  Identity] public uint     Id          { get; set; } // int(10) unsigned
		[Column("user_id"),      NotNull              ] public uint     UserId      { get; set; } // int(10) unsigned
		[Column("sender_id"),       Nullable          ] public uint?    SenderId    { get; set; } // int(10) unsigned
		[Column("type"),         NotNull              ] public string   Type        { get; set; } // varchar(100)
		[Column("subject_type"),    Nullable          ] public string   SubjectType { get; set; } // varchar(200)
		[Column("subject_id"),      Nullable          ] public uint?    SubjectId   { get; set; } // int(10) unsigned
		[Column("data"),            Nullable          ] public byte[]   Data        { get; set; } // blob
		[Column("time"),         NotNull              ] public DateTime Time        { get; set; } // datetime
		[Column("is_read"),      NotNull              ] public bool     IsRead      { get; set; } // tinyint(1)
		[Column("is_deleted"),   NotNull              ] public bool     IsDeleted   { get; set; } // tinyint(1)
	}

	[Table("password_tokens")]
	public partial class PasswordToken
	{
		[Column("id"),         PrimaryKey, NotNull] public string   Id        { get; set; } // varchar(100)
		[Column("user_id"),                NotNull] public uint     UserId    { get; set; } // int(10) unsigned
		[Column("created_at"),             NotNull] public DateTime CreatedAt { get; set; } // timestamp
	}

	[Table("permissions")]
	public partial class Permission
	{
		[Column("group_id"),   PrimaryKey(1), NotNull] public uint   GroupId           { get; set; } // int(10) unsigned
		[Column("permission"), PrimaryKey(2), NotNull] public string Permission_Column { get; set; } // varchar(100)
	}

	[Table("posts")]
	public partial class Post
	{
		[Column("id"),            PrimaryKey,  Identity] public uint      Id           { get; set; } // int(10) unsigned
		[Column("discussion_id"), NotNull              ] public uint      DiscussionId { get; set; } // int(10) unsigned
		[Column("number"),           Nullable          ] public uint?     Number       { get; set; } // int(10) unsigned
		[Column("time"),          NotNull              ] public DateTime  Time         { get; set; } // datetime
		[Column("user_id"),          Nullable          ] public uint?     UserId       { get; set; } // int(10) unsigned
		[Column("type"),             Nullable          ] public string    Type         { get; set; } // varchar(100)
		[Column("content"),          Nullable          ] public string    Content      { get; set; } // text
		[Column("edit_time"),        Nullable          ] public DateTime? EditTime     { get; set; } // datetime
		[Column("edit_user_id"),     Nullable          ] public uint?     EditUserId   { get; set; } // int(10) unsigned
		[Column("hide_time"),        Nullable          ] public DateTime? HideTime     { get; set; } // datetime
		[Column("hide_user_id"),     Nullable          ] public uint?     HideUserId   { get; set; } // int(10) unsigned
		[Column("ip_address"),       Nullable          ] public string    IpAddress    { get; set; } // varchar(45)
		[Column("is_approved"),   NotNull              ] public bool      IsApproved   { get; set; } // tinyint(1)
		[Column("is_private"),    NotNull              ] public bool      IsPrivate    { get; set; } // tinyint(1)
	}

	[Table("posts_likes")]
	public partial class PostsLike
	{
		[Column("post_id"), PrimaryKey(1), NotNull] public uint PostId { get; set; } // int(10) unsigned
		[Column("user_id"), PrimaryKey(2), NotNull] public uint UserId { get; set; } // int(10) unsigned
	}

	[Table("settings")]
	public partial class Setting
	{
		[Column("key"),   PrimaryKey,  NotNull] public string Key   { get; set; } // varchar(100)
		[Column("value"),    Nullable         ] public string Value { get; set; } // text
	}

	[Table("tags")]
	public partial class Tag
	{
		[Column("id"),                 PrimaryKey,  Identity] public uint      Id               { get; set; } // int(10) unsigned
		[Column("name"),               NotNull              ] public string    Name             { get; set; } // varchar(100)
		[Column("slug"),               NotNull              ] public string    Slug             { get; set; } // varchar(100)
		[Column("description"),           Nullable          ] public string    Description      { get; set; } // text
		[Column("color"),                 Nullable          ] public string    Color            { get; set; } // varchar(50)
		[Column("background_path"),       Nullable          ] public string    BackgroundPath   { get; set; } // varchar(100)
		[Column("background_mode"),       Nullable          ] public string    BackgroundMode   { get; set; } // varchar(100)
		[Column("position"),              Nullable          ] public int?      Position         { get; set; } // int(11)
		[Column("parent_id"),             Nullable          ] public uint?     ParentId         { get; set; } // int(10) unsigned
		[Column("default_sort"),          Nullable          ] public string    DefaultSort      { get; set; } // varchar(50)
		[Column("is_restricted"),      NotNull              ] public bool      IsRestricted     { get; set; } // tinyint(1)
		[Column("is_hidden"),          NotNull              ] public bool      IsHidden         { get; set; } // tinyint(1)
		[Column("discussions_count"),  NotNull              ] public uint      DiscussionsCount { get; set; } // int(10) unsigned
		[Column("last_time"),             Nullable          ] public DateTime? LastTime         { get; set; } // datetime
		[Column("last_discussion_id"),    Nullable          ] public uint?     LastDiscussionId { get; set; } // int(10) unsigned
	}

	[Table("users")]
	public partial class User
	{
		[Column("id"),                      PrimaryKey,  Identity] public uint      Id                    { get; set; } // int(10) unsigned
		[Column("username"),                NotNull              ] public string    Username              { get; set; } // varchar(100)
		[Column("email"),                   NotNull              ] public string    Email                 { get; set; } // varchar(150)
		[Column("is_activated"),            NotNull              ] public bool      IsActivated           { get; set; } // tinyint(1)
		[Column("password"),                NotNull              ] public string    Password              { get; set; } // varchar(100)
		[Column("bio"),                        Nullable          ] public string    Bio                   { get; set; } // text
		[Column("avatar_path"),                Nullable          ] public string    AvatarPath            { get; set; } // varchar(100)
		[Column("preferences"),                Nullable          ] public byte[]    Preferences           { get; set; } // blob
		[Column("join_time"),                  Nullable          ] public DateTime? JoinTime              { get; set; } // datetime
		[Column("last_seen_time"),             Nullable          ] public DateTime? LastSeenTime          { get; set; } // datetime
		[Column("read_time"),                  Nullable          ] public DateTime? ReadTime              { get; set; } // datetime
		[Column("notifications_read_time"),    Nullable          ] public DateTime? NotificationsReadTime { get; set; } // datetime
		[Column("discussions_count"),       NotNull              ] public uint      DiscussionsCount      { get; set; } // int(10) unsigned
		[Column("comments_count"),          NotNull              ] public uint      CommentsCount         { get; set; } // int(10) unsigned
		[Column("flags_read_time"),            Nullable          ] public DateTime? FlagsReadTime         { get; set; } // datetime
		[Column("suspend_until"),              Nullable          ] public DateTime? SuspendUntil          { get; set; } // datetime
		[Column("twitter_id"),                 Nullable          ] public string    TwitterId             { get; set; } // varchar(255)
	}

	[Table("users_discussions")]
	public partial class UsersDiscussion
	{
		[Column("user_id"),       PrimaryKey(1), NotNull] public uint      UserId       { get; set; } // int(10) unsigned
		[Column("discussion_id"), PrimaryKey(2), NotNull] public uint      DiscussionId { get; set; } // int(10) unsigned
		[Column("read_time"),        Nullable           ] public DateTime? ReadTime     { get; set; } // datetime
		[Column("read_number"),      Nullable           ] public uint?     ReadNumber   { get; set; } // int(10) unsigned
		[Column("subscription"),     Nullable           ] public string    Subscription { get; set; } // enum('follow','ignore')
	}

	[Table("users_groups")]
	public partial class UsersGroup
	{
		[Column("user_id"),  PrimaryKey(1), NotNull] public uint UserId  { get; set; } // int(10) unsigned
		[Column("group_id"), PrimaryKey(2), NotNull] public uint GroupId { get; set; } // int(10) unsigned
	}

	[Table("users_tags")]
	public partial class UsersTag
	{
		[Column("user_id"),   PrimaryKey(1), NotNull] public uint      UserId   { get; set; } // int(10) unsigned
		[Column("tag_id"),    PrimaryKey(2), NotNull] public uint      TagId    { get; set; } // int(10) unsigned
		[Column("read_time"),    Nullable           ] public DateTime? ReadTime { get; set; } // datetime
		[Column("is_hidden"),                NotNull] public bool      IsHidden { get; set; } // tinyint(1)
	}

	public static partial class TableExtensions
	{
		public static AccessToken Find0(this ITable<AccessToken> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ApiKey Find1(this ITable<ApiKey> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AuthToken Find2(this ITable<AuthToken> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Discussion Find3(this ITable<Discussion> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DiscussionsTag Find4(this ITable<DiscussionsTag> table, uint DiscussionId, uint TagId)
		{
			return table.FirstOrDefault(t =>
				t.DiscussionId == DiscussionId &&
				t.TagId        == TagId);
		}

		public static EmailToken Find5(this ITable<EmailToken> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Flag Find6(this ITable<Flag> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Group Find7(this ITable<Group> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static MentionsPost Find8(this ITable<MentionsPost> table, uint PostId, uint MentionsId)
		{
			return table.FirstOrDefault(t =>
				t.PostId     == PostId &&
				t.MentionsId == MentionsId);
		}

		public static MentionsUser Find9(this ITable<MentionsUser> table, uint PostId, uint MentionsId)
		{
			return table.FirstOrDefault(t =>
				t.PostId     == PostId &&
				t.MentionsId == MentionsId);
		}

		public static Notification Find10(this ITable<Notification> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PasswordToken Find11(this ITable<PasswordToken> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Permission Find12(this ITable<Permission> table, uint GroupId, string Permission_Column)
		{
			return table.FirstOrDefault(t =>
				t.GroupId           == GroupId &&
				t.Permission_Column == Permission_Column);
		}

		public static Post Find13(this ITable<Post> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PostsLike Find14(this ITable<PostsLike> table, uint PostId, uint UserId)
		{
			return table.FirstOrDefault(t =>
				t.PostId == PostId &&
				t.UserId == UserId);
		}

		public static Setting Find15(this ITable<Setting> table, string Key)
		{
			return table.FirstOrDefault(t =>
				t.Key == Key);
		}

		public static Tag Find16(this ITable<Tag> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static User Find17(this ITable<User> table, uint Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UsersDiscussion Find18(this ITable<UsersDiscussion> table, uint UserId, uint DiscussionId)
		{
			return table.FirstOrDefault(t =>
				t.UserId       == UserId &&
				t.DiscussionId == DiscussionId);
		}

		public static UsersGroup Find19(this ITable<UsersGroup> table, uint UserId, uint GroupId)
		{
			return table.FirstOrDefault(t =>
				t.UserId  == UserId &&
				t.GroupId == GroupId);
		}

		public static UsersTag Find20(this ITable<UsersTag> table, uint UserId, uint TagId)
		{
			return table.FirstOrDefault(t =>
				t.UserId == UserId &&
				t.TagId  == TagId);
		}
	}
}
